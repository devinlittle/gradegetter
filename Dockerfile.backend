# syntax=docker/dockerfile:1
ARG RUST_VERSION=1.90.0
ARG APP_NAME=backend

################################################################################
FROM rust:${RUST_VERSION}-alpine AS build
ARG APP_NAME
WORKDIR /app
COPY . .

RUN apk add --no-cache clang lld musl-dev git perl make

ENV SQLX_OFFLINE=true
RUN --mount=type=cache,target=/app/target/ \
    --mount=type=cache,target=/usr/local/cargo/git/db \
    --mount=type=cache,target=/usr/local/cargo/registry/ \
cargo build --locked --release --bin backend && \
cp ./target/release/$APP_NAME /bin/server
################################################################################
FROM alpine:3.18 AS final

ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser
USER appuser

COPY --from=build /bin/server /bin/

ENV RUST_LOG=info
EXPOSE 3000

CMD ["/bin/server"]
